name: Fetch Upstream

on:
  schedule:
    - cron: '15 */2 * * *' # At minute 15 past every 2nd hour
  push:

env:
  REMOTE_REPO: gotify/cli

jobs:
  check-update:
    runs-on: ubuntu-latest

    outputs:
      updated: ${{ steps.comp.output.result }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Extract UNIX and ISO8601 Timestamp
        run: echo "::set-env name=LOCAL_UNIX_TIMESTAMP::$(git show -s --format=%ct HEAD),name=LOCAL_ISO_TIMESTAMP::$(git show -s --format=cI HEAD)"

      - name: Get remote latest commit timestamp
        run: echo "::set-env name=REMOTE_ISO_TIMESTAMP::$(curl -s $GITHUB_API_URL/$REMOTE_REPO/commits | jq .[0].commit.committer.date)"

      - name: Convert remote timestamp to UNIX format
        run: echo "::set-env name=REMOTE_UNIX_TIMESTAMP::$(date --date=$REMOTE_ISO_TIMESTAMP +%s)"

      - name: Compare Local and Remote Timestamps and set it to output
        run: echo "::set-output name=result::${{ env.REMOTE_UNIX_TIMESTAMP > env.LOCAL_UNIX_TIM }}"
        
  fetch:
    runs-on: ubuntu-latest
    needs: check-update
    if: ${{ needs.check-update.outputs.updated }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fork Sync
        uses: TG908/fork-sync@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  notify-build:
    runs-on: ubuntu-latest
    needs: fetch
    if: ${{ needs.fetch.result == 'success' }}

    steps:
      - name: Fire a repository dispatch to start the build porcess
        run: >
          curl -s -X POST -H 'Accept: application/vnd.github.v3+json' 
          $GITHUB_API_URL/${{ github.repository }}/actions/workflows/build-and-publish.yml/dispatches
          -d '{"event_type": "upstream-updated"}'